return {
    {
        "nvimdev/dashboard-nvim",
        lazy = false,
        cond = vim.api.nvim_buf_get_name(0) == "",
        opts = function()
            local logo = [[
         ‚ñÑ‚ñÑ                     ‚ñÑ‚ñÑ      
  ‚ñÑ‚ñà‚ñÑ   ‚ñê‚ñà‚ñå    ‚ñà‚ñà     ‚ñÄ‚ñà‚ñÑ  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå
   ‚ñÄ‚ñà‚ñà  ‚ñê‚ñà‚ñå  ‚ñÑ‚ñà‚ñà        ‚ñÄ   ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ 
     ‚ñÄ  ‚ñê‚ñà‚ñå                ‚ñê‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñå 
 ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ   ‚ñÄ‚ñÄ‚ñÄ‚ñà  ‚ñê‚ñà‚ñà‚ñÑ‚ñÑ‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñå 
      ‚ñà‚ñå  ‚ñê‚ñà‚ñå          ‚ñê‚ñà     ‚ñà‚ñà‚ñà‚ñà ‚ñÑ‚ñÑ   
     ‚ñà‚ñà   ‚ñê‚ñà‚ñå          ‚ñê‚ñà  ‚ñÑ‚ñà‚ñà  ‚ñê‚ñà  ‚ñÄ‚ñà‚ñà‚ñÑ
   ‚ñà‚ñà‚ñÄ    ‚ñê‚ñà‚ñå    ‚ñà‚ñà    ‚ñÑ‚ñà‚ñà‚ñÑ     ‚ñê‚ñà      
‚ñê‚ñà‚ñà‚ñÄ       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ  ‚ñÄ‚ñà‚ñÄ  ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ
            ]]

            logo = string.rep("\n", 6)
                .. logo
                .. "\n"
                .. "üöÄ Moving At The Speed Of Light üöÄ"
                .. "\n\n"

            local opts = {
                theme = "doom",
                hide = {
                    tabline = false,
                },
                config = {
                    header = vim.split(logo, "\n"),
                    center = {
                        {
                            action = "enew | startinsert",
                            desc = " New File",
                            icon = "Ó©ø ",
                            key = "i",
                        },
                        {
                            action = "FzfLua files",
                            desc = " Find Files",
                            icon = "ÔÉÖ ",
                            key = "f",
                        },
                        {
                            action = "FzfLua live_grep_native",
                            desc = " Find Text",
                            icon = "Ó´Ñ ",
                            key = "r",
                        },
                        {
                            action = "FzfLua marks",
                            desc = " Find Marks",
                            icon = "Ó™• ",
                            key = "m",
                        },
                        {
                            action = "Oil --float",
                            desc = " File Explorer",
                            icon = "Ôãû ",
                            key = "o",
                        },
                        {
                            action = "Neogit",
                            desc = " Git Interface",
                            icon = "ÓúÇ ",
                            key = "g",
                        },
                        {
                            action = "quitall",
                            desc = " Quit",
                            icon = "Ôê¶ ",
                            key = "q",
                        },
                    },
                    footer = function()
                        local stats = require("lazy").stats()
                        return {
                            string.format(
                                "‚ö° Neovim loaded %d/%d plugins in %.2fms",
                                stats.loaded,
                                stats.count,
                                stats.startuptime
                            ),
                        }
                    end,
                },
            }

            for _, button in ipairs(opts.config.center) do
                button.desc = button.desc .. string.rep(" ", 43 - #button.desc)
                button.key_format = "  %s"
            end
            return opts
        end,
    },

    {
        "folke/noice.nvim",
        event = "VeryLazy",
        cond = not vim.g.vscode,
        opts = {
            lsp = {
                override = {
                    ["vim.lsp.util.convert_input_to_markdown_lines"] = true,
                    ["vim.lsp.util.stylize_markdown"] = true,
                    ["cmp.entry.get_documentation"] = true,
                },
            },
            presets = { long_message_to_split = true },
        },
        dependencies = {
            "MunifTanjim/nui.nvim",
            { "stevearc/dressing.nvim", config = true },
        },
    },

    {
        "nvim-lualine/lualine.nvim",
        cond = not vim.g.vscode,
        event = "UIEnter",
        dependencies = {
            "folke/noice.nvim",
            "nvim-tree/nvim-web-devicons",
        },
        config = function()
            local mode_map = {
                n = "(·¥ó_ ·¥ó„ÄÇ)",
                nt = "(·¥ó_ ·¥ó„ÄÇ)",
                i = "(‚Ä¢ÃÄ - ‚Ä¢ÃÅ )",
                R = "( ‚Ä¢ÃØÃÅ ‚ÇÉ ‚Ä¢ÃØÃÄ)",
                v = "(‚äô _ ‚äô )",
                V = "(‚äô _ ‚äô )",
                no = "Œ£(¬∞‚ñ≥¬∞Í™±Í™±Í™±)",
                ["\22"] = "(‚äô _ ‚äô )",
                t = "(‚åê‚ñ†_‚ñ†)",
                ["!"] = "Œ£(¬∞‚ñ≥¬∞Í™±Í™±Í™±)",
                c = "Œ£(¬∞‚ñ≥¬∞Í™±Í™±Í™±)",
                s = "SUB",
            }

            require("lualine").setup({
                options = {
                    icons_enabled = true,
                    theme = "catppuccin",
                    section_separators = { left = "ÓÇ¥", right = "ÓÇ∂" },
                    component_separators = { left = "ÓÇµ", right = "" },
                    globalstatus = true,
                },
                sections = {
                    lualine_a = {
                        {
                            function()
                                return "ÓöÆ"
                            end,
                            separator = "",
                        },
                        {
                            "mode",
                            padding = { left = 0, right = 1 },
                        },
                    },
                    lualine_b = { "branch", "diff" },
                    lualine_c = { "filename", "filesize" },
                    lualine_x = {
                        {
                            require("noice").api.status.mode.get,
                            cond = require("noice").api.status.mode.has,
                            color = { fg = vim.g.palette.overlay0 },
                        },
                        "%S",
                        "%l:%c",
                        {
                            "filetype",
                            colored = true,
                        },
                    },
                    lualine_y = {
                        {
                            "encoding",
                            padding = { left = 1, right = 0 },
                        },
                        "fileformat",
                    },
                    lualine_z = {
                        {
                            "diagnostics",
                            sources = { "nvim_diagnostic" },
                            symbols = { error = "ÔÅó ", warn = "ÔÅ™ ", info = "ÔÅö " },
                            diagnostics_color = {
                                error = { bg = vim.g.palette.base, fg = vim.g.palette.red },
                                warn = { bg = vim.g.palette.base, fg = vim.g.palette.peach },
                                info = { bg = vim.g.palette.base, fg = vim.g.palette.yellow },
                                hint = { bg = vim.g.palette.base, fg = vim.g.palette.sky },
                            },
                        },
                    },
                },
                tabline = {
                    lualine_a = {
                        {
                            "buffers",
                            buffers_color = {
                                inactive = {
                                    bg = vim.g.palette.surface0,
                                    fg = vim.g.palette.text,
                                },
                            },
                            padding = 1,
                            filetype_names = {
                                NeogitStatus = "ÓúÇ Neogit",
                                OverseerList = "ÔÅÆ Overseer",
                                ["copilot-chat"] = "Ó∞û Copilot Chat",
                                checkhealth = "ÔÉ∞ Health Check",
                                dashboard = "Û∞ïÆ Dashboard",
                                dbui = "ÔáÄ DadBod",
                                harpoon = "Û±°Ö Harpoon",
                                lazy = "Û∞í≤ Lazy",
                                lspinfo = "ÔÑ© LSP Info",
                                mason = "Û∞áö Mason",
                                oil = "Û∞èá Oil",
                                undotree = "ÔÉ¢ UndoTree",
                            },
                        },
                    },
                    lualine_y = {
                        {
                            function()
                                return mode_map[vim.api.nvim_get_mode().mode] or [[ÂÖâÈÄü]]
                            end,
                            separator = { left = "ÓÇ∂", right = "ÓÇ¥" },
                            padding = 0,
                        },
                    },
                },
                extensions = { "nvim-dap-ui", "quickfix" },
            })
        end,
    },
}
